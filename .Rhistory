#   pred_multiplicity = y$multiplicity,
#   class = y$class
# )
}
res = lapply(18:19), grid_search)
18:19
grid_search
res = lapply(18:19, grid_search)
res
res %>% do.call(rbind,.)
res = res %>% do.call(rbind,.)
res %>%
filter(cutoff=="0.9") %>% pull(outcome) %>% table()
253/(253+232)
res %>%
filter(cutoff=="0.95") %>% pull(outcome) %>% table()
275/(275+210)
1:length(cutoff)
x = readRDS("./equivalence.rds")
ggplot(x)+geom_line(aes(x=cutoff,y=equivalence))
ggplot(x)+geom_line(aes(x=cutoff,y=equivalence))+theme_bw()
geom_point(aes(x=cutoff,y=quivalence)_+theme_bw()
geom_point(aes(x=cutoff,y=equivalence)_+theme_bw()
geom_point(aes(x=cutoff,y=equivalence)+theme_bw()
ggplot(x)+geom_line(aes(x=cutoff,y=equivalence))+
geom_point(aes(x=cutoff,y=equivalence))+theme_bw()
ggplot(x)+geom_line(aes(x=cutoff,y=equivalence))+
geom_point(aes(x=cutoff,y=equivalence))+CNAqc:::my_ggplot_theme()
ggplot(x)+geom_line(aes(x=cutoff,y=equivalence))+
geom_point(aes(x=cutoff,y=equivalence))+CNAqc:::my_ggplot_theme() %>%
ggsave(filename = "./equivalnce_plot.pdf")
ggplot(x)+geom_line(aes(x=cutoff,y=equivalence))+
geom_point(aes(x=cutoff,y=equivalence))+CNAqc:::my_ggplot_theme() %>%
ggsave(filename = "./equivalnce_plot.pdf", device = "pdf", dpi = 300)
ggplot(x)+geom_line(aes(x=cutoff,y=equivalence))+
geom_point(aes(x=cutoff,y=equivalence))+CNAqc:::my_ggplot_theme()
plt = ggplot(x)+geom_line(aes(x=cutoff,y=equivalence))+
geom_point(aes(x=cutoff,y=equivalence))+CNAqc:::my_ggplot_theme()
ggsave(plt,filename = "./equivalnce_plot.pdf", device = "pdf", dpi = 300)
ggsave(plt,filename = "./equivalnce_plot.pdf", device = "pdf", dpi = 300, width = 8, height = 6)
ggsave(plt,filename = "./equivalnce_plot.pdf", device = "pdf", dpi = 300, width = 6, height = 3)
# res1 = grid_search(19)
res1 = readRDS("./equivalence_extended.rds")
res1
res1 %>% filter(cutoff=="0.95")
res1 = res1 %>% filter(cutoff=="0.95")
pdf("./equivalence_bbin_0.95_fails.pdf", width = 8, height = 6)
lapply(1:(res1 %>% nrow()), function(r){
if(res1[r,]$outcome=="fail"){
res1[r,]$plot[[1]]+
labs(title = res1[r,]$sample,
subtitle = paste0("Binomial: ",res1[r,]$class, " vs Terzile:", res1[r,]$class_terzile)) %>%
print()
}
})
dev.off()
res1
res1$plot[[1]]
res1[1,]$plot[1[]]
res1[1,]$plot[[1]]
res1[1,]$plot[[2]]
res1[1,]$plot[[1]][[1]]
setwd("~/Documents/GitHub/TAPACLOTH/")
devtools::load_all()
x = init(example_data$data,
example_data$sample,
example_data$purity)
x
x = idify(x)
x$data$id
id = x$data$id
test = get_NV(x, id)
DP = get_DP(x, id)
purity = get_purity(x)
cutoff=0.85
model="beta-binomial"
rho = 0.01
karyotypes = c("1:0","1:1","2:0","2:1","2:2")
NV_x = 1:DP
DP
id = x$data$id[1]
test = get_NV(x, id)
DP = get_DP(x, id)
NV_x = 1:DP
NV_x
# Density
db = function(Major, minor)
{
peaks = CNAqc:::expected_vaf_peak(Major, minor, purity)$peak
lapply(peaks %>% seq_along, function(p)
data.frame(
density = compute_density(NV_x, DP, prob = peaks[p], model, rho),
NV = NV_x,
Major = Major,
minor = minor,
multiplicity = p,
karyotype = paste0(Major, ":", minor),
label = paste0(Major, ":", minor, ' ', p),
peak = peaks[p]
)) %>%
Reduce(f = bind_rows)
}
# Cutoff
cut = function(x, cutoff)
{
cut_offs = x %>%
group_by(label) %>%
filter(density == max(density)) %>%
ungroup() %>%
mutate(cutoff = density*cutoff) %>%
select(label, cutoff)
x %>%
left_join(cut_offs, by = "label") %>%
mutate(label = ifelse(density < cutoff, "out of sample", label))
}
karyotypes
dataset = lapply(karyotypes, function(k) {
alleles = strsplit(k, split = ":")[[1]] %>% as.integer()
db(alleles[1],alleles[2])
}) %>% bind_rows() %>% cut(cutoff)
dataset
dataset %>%
maximise()
dataset %>%
maximise() %>%
filter(NV == test)
dataset %>%
maximise() %>%
filter(NV == test) %>%
pull(label) %>%
unique() %>%
paste(collapse = ', ')
dataset %>%
maximise() %>%
filter(NV == test) %>%
pull(label) %>%
unique()
dataset %>%
maximise() %>%
filter(NV == test) %>%
pull(label)
dataset
dataset %>% maximise()
dataset %>% filter(NV==test)
ll = dataset %>% filter(NV==test)
ll %>% maximise()
ll
ll[1]
ll[1,]
ll[-1,]
nrow(ll)
1:nrow(ll)
ll$uncertainty = NULL
ll
ll$uncertainty = NA
ll
i=1
ll[-i]
ll[-i,]
ll[-i,]$density %>% sum()
ll[i,]$density
ll
for(i in 1:nrow(ll)){
ll[i,]$uncertainty = ll[i,]$density/(ll[-i,]$density %>% sum())
}
ll
1-(ll$density %>% sum())
dataset
x = dataset
x %>%
group_by(NV)
x %>%
group_by(NV) %>%
filter(density == max(density))
x %>%
group_by(NV) %>%
filter(density == max(density)) %>% arrange(NV])
x %>%
group_by(NV) %>%
filter(density == max(density)) %>% arrange(NV)
x %>%
group_by(NV) %>%
filter(density == max(density)) %>%
ungroup()
x %>%
group_by(label)
x %>%
group_by(label) %>%
filter(density == max(density))
x %>%
group_by(label) %>%
filter(density == max(density))
x %>%
group_by(label) %>%
filter(density == max(density)) %>%
ungroup()
x %>%
group_by(label) %>%
filter(density == max(density)) %>%
ungroup() %>%
mutate(cutoff = density*cutoff)
x %>%
group_by(label) %>%
filter(density == max(density)) %>%
ungroup() %>%
mutate(cutoff = density*cutoff)
x %>%
group_by(label) %>%
filter(density == max(density)) %>%
ungroup() %>%
mutate(cutoff = density*cutoff)
x %>%
group_by(label) %>%
filter(density == max(density)) %>%
ungroup() %>%
mutate(cutoff = density*cutoff)
x %>%
group_by(label) %>%
filter(density == max(density)) %>%
ungroup() %>%
mutate(cutoff = density*cutoff)
x %>%
group_by(label) %>%
filter(density == max(density)) %>%
ungroup() %>%
mutate(cutoff = density*cutoff)
x %>%
group_by(label) %>%
filter(density == max(density)) %>%
ungroup() %>%
mutate(cutoff = density*cutoff)
dataset$density
dataset
dataset %>% filter(Major==1,minor==1,multiplicity==1)
dataset %>% filter(Major==1,minor==1,multiplicity==1) %>% select(density,NV)
dataset %>% filter(Major==1,minor==1,multiplicity==1) %>% select(density,NV) %>% plot()
dataset %>% filter(Major==1,minor==1,multiplicity==1) %>% select(NV,density) %>% plot()
dataset %>% filter(Major==1,minor==1,multiplicity==1) %>% select(NV,density) %>% mutate(density=density/max(density))
dataset %>% filter(Major==1,minor==1,multiplicity==1) %>% select(NV,density) %>% mutate(density=density/max(density)) %>% plot()
dataset
ll = dataset %>%
group_by(Major,minor,karyotype)
ll
dataset %>%
group_by(Major,minor,karyotype) %>%
summarise(density = density/(max(density)))
dataset %>%
group_by(Major,minor,multiplicity) %>%
summarise(density = density/(max(density)))
ll = dataset %>%
group_by(Major,minor,multiplicity) %>%
summarise(density = density/(max(density)))
ll = dataset %>%
group_by(Major,minor,multiplicity) %>%
summarise(NV,density = density/(max(density)))
ll
dataset %>%
mutate(state = paste0(Major,":",minor," ",multiplicity))
ll = dataset %>%
mutate(state = paste0(Major,":",minor," ",multiplicity))
ll
ll = dataset %>%
mutate(state = paste0(Major,":",minor," ",multiplicity)) %>%
group_by(state) %>%
summarise(NV,density = density/(max(density)))
ll
ggplot(ll, aes(x=NV,y=density))+geom_line(aes(color=state))
ll %>%
dplyr::filter(NV==test)
ll %>%
dplyr::filter(NV==test) %>%
pull(density) %>% sum()
ll %>%
dplyr::filter(NV==test) %>%
pull(density)
ll %>%
dplyr::filter(NV==test) %>%
pull(density) %>% sd()
1-ll %>%
dplyr::filter(NV==test) %>%
pull(density) %>% sd()
1-sd(c(1,0,0,0,0,0,0,0))
1-sd(c(1,0,0,0,0,0,0,0,0))
1-var(c(1,0,0,0,0,0,0,0,0))
1-var(c(1,0,0,0,0,0,0,0,0,0))
1-ll %>%
dplyr::filter(NV==test) %>%
pull(density) %>% sd()
1-ll %>%
dplyr::filter(NV==test) %>%
pull(density) %>% sum()
ll %>%
dplyr::filter(NV==test) %>%
pull(density) %>% sum()
1/(ll %>%
dplyr::filter(NV==test) %>%
pull(density) %>% sum())
1/sum(1,0,0,0,0,0,0,0)
1-1/sum(1,0,0,0,0,0,0,0)
1-1/sum(1,0,0,0,0,0,0,0,0)
1-1/sum(1,0,0,0,0,0,0,0,0,0)
1-1/sum(0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5)
sum(0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5)
0.5-mean(c(0.5,0.5,0.5))
1-(0.5-mean(c(0.5,0.5,0.5)))
1-(0.5-mean(c(1,0,0)))
1-(1-mean(c(1,0,0)))
ll
dataset %>%
maximise() %>%
filter(NV == test)
dataset %>%
maximise()
dataset %>%
mutate(state = paste0(Major,":",minor," ",multiplicity)) %>%
group_by(state) %>%
summarise(NV,density = density/(max(density)))
dataset %>%
mutate(state = paste0(Major,":",minor," ",multiplicity))
dataset %>%
mutate(state = paste0(Major,":",minor," ",multiplicity)) %>%
group_by(state)
x
x %>%
group_by(NV) %>%
filter(density == max(density))
dataset %>%
maximise() %>%
filter(NV == test)
dataset %>%
maximise()
dataset %>%
filter(NV==test)
source("~/Documents/GitHub/TAPACLOTH/R/binomial_test.R", echo=TRUE)
source("~/Documents/GitHub/TAPACLOTH/R/binomial_test.R", echo=TRUE)
dataset %>%
filter(NV==test) %>%
arrange(desc(density))
ll = dataset %>%
filter(NV==test) %>%
arrange(desc(density))
ll[1:2,]
-2*log(ll[1,]/ll[2,])
-2*log(ll[1,]$density/ll[2,]$density)
-2*ln(ll[1,]$density/ll[2,]$density)
dataset = lapply(karyotypes, function(k) {
alleles = strsplit(k, split = ":")[[1]] %>% as.integer()
db(alleles[1],alleles[2])
}) %>% bind_rows() %>% cut(cutoff)
ll = dataset %>%
filter(NV==test) %>%
arrange(desc(density))
ll
ll[1,]$density/ll[2,]$density
log(ll[1,]$density/ll[2,]$density)
ll[1,]$density/ll[2,]$density
ll[2,]$density/ll[1,]$density
0/1
0.5/0.5
llratio = ll[2,]$density/ll[1,]$density
llratio
class_of = dataset %>%
maximise() %>%
filter(NV == test) %>%
pull(label) %>%
unique() %>%
paste(collapse = ', ')
ploidy = NA
multiplicity = NA
if(class_of != "out of sample"){
info = strsplit(class_of, ",")[[1]][1] %>% strsplit(" ")
ploidy = strsplit(info[[1]][1],"\\:")[[1]] %>% as.integer() %>% sum()
multiplicity = info[[1]][2] %>% as.integer()
}
tibble(ploidy = ploidy,
multiplicity = multiplicity,
wt = ploidy-multiplicity,
density = list(dataset)
)
tibble(ploidy = ploidy,
multiplicity = multiplicity,
wt = ploidy-multiplicity,
uncertainty = llratio,
density = list(dataset))
devtools::load_all()
x = init(example_data$data,
example_data$sample,
example_data$purity)
x = run_classifier(
x = x,
cutoff = 0.9,
model = "beta-binomial",
rho = 0.01,
karyotypes = c("1:0","1:1","2:0","2:1","2:2")
)
x
devtools::load_all()
x = init(example_data$data,
example_data$sample,
example_data$purity)
x = run_classifier(
x = x,
cutoff = 0.9,
model = "beta-binomial",
rho = 0.01,
karyotypes = c("1:0","1:1","2:0","2:1","2:2")
)
x
plot_test(x,"chr10:114879306:114879306:G:C",model = )
plot_test(x,"chr10:114879306:114879306:G:C",model)
x
plot_test(x,"chr14:30159463:30159463:G:A",model)
plot_test(x,"chr16:72916293:72916293:A:G",model)
x$classifier$`beta-binomial`$data[7,]
x$classifier$`beta-binomial`$data[6,]
x$classifier$`beta-binomial`$data[6,]$density
x$classifier$`beta-binomial`$data[6,]$density %>% group_by(label) %>% summarise(max(density))
x$classifier$`beta-binomial`$data[6,]$density[[1]] %>% group_by(label) %>% summarise(max(density))
x$classifier$`beta-binomial`$data[6,]
x$classifier$`beta-binomial`$data[6,]$density[[1]] %>% group_by(label) %>% summarise(max(density)) %>% arrange(desc(density))
x$classifier$`beta-binomial`$data[6,]$density[[1]] %>% group_by(label) %>% summarise(max(density))
x$classifier$`beta-binomial`$data[6,]$density[[1]] %>% group_by(label) %>% summarise(md = ax(density)) %>% arrange(desc(d))
x$classifier$`beta-binomial`$data[6,]$density[[1]] %>% group_by(label) %>% summarise(d= (density)) %>% arrange(desc(d))
x$classifier$`beta-binomial`$data[6,]$density[[1]] %>% group_by(label) %>% summarise( d = max(density)) %>% arrange(desc(d))
dataset %>%
filter(NV==test) %>%
arrange(desc(density))
dataset
dataset %>% head()
dataset %>%
dplyr::mutate(state = paste0(Major, ":", minor, multiplicity)) %>%
group_by(state) %>%
summarise(density = density/max(density))
normll = dataset %>%
dplyr::mutate(state = paste0(Major, ":", minor, multiplicity)) %>%
group_by(state) %>%
summarise(density = density/max(density), everything())
dataset %>%
dplyr::mutate(state = paste0(Major, ":", minor, multiplicity)) %>%
group_by(state)
normll = dataset %>%
dplyr::mutate(state = paste0(Major, ":", minor, multiplicity)) %>%
group_by(state) %>%
summarise(NV,density = density/max(density))
normll
ggplot(normll, aes(x=NV,y=density,color=state))
normll
normll %>% View()
ggplot(normll, aes(x=NV,y=density,color=state))+geom_line()
normll = dataset %>%
dplyr::mutate(state = paste0(Major, ":", minor, multiplicity)) %>%
group_by(state) %>%
summarise(NV,density = density/max(density))
normll %>%
filter(NV==test)
normll = dataset %>%
dplyr::mutate(state = paste0(Major, ":", minor, multiplicity)) %>%
group_by(state) %>%
summarise(NV,density = density/max(density)) %>%
filter(NV==test) %>%
arrange(desc(density))
normll
normll = dataset %>%
dplyr::mutate(state = paste0(Major, ": ", minor, multiplicity)) %>%
group_by(state) %>%
summarise(NV,density = density/max(density)) %>%
filter(NV==test) %>%
arrange(desc(density))
normll
normll = dataset %>%
dplyr::mutate(state = paste0(Major, ":", minor, " ", multiplicity)) %>%
group_by(state) %>%
summarise(NV,density = density/max(density)) %>%
filter(NV==test) %>%
arrange(desc(density))
normll
normll[2,]$density/normll[1,]$density
devtools::load_all()
x = run_classifier(
x = x,
cutoff = 0.9,
model = "beta-binomial",
rho = 0.01,
karyotypes = c("1:0","1:1","2:0","2:1","2:2")
)
x
x$classifier$`beta-binomial`$data$uncertainty %>% pull()
x$classifier$`beta-binomial`$data$uncertainty
x$classifier$`beta-binomial`$data$uncertainty %>% hist()
x$classifier$`beta-binomial`$data$uncertainty %>% hist(binwidth=0.01)
x$classifier$`beta-binomial`$data$uncertainty %>% hist(bins=10)
x$classifier$`beta-binomial`$data$uncertainty %>% hist(bins=20)
x$classifier$`beta-binomial`$data$uncertainty %>% hist(bins=200)
warnings()
x$classifier$`beta-binomial`$data$uncertainty %>% hist(bin=200)
x$classifier$`beta-binomial`$data$uncertainty %>% hist(nbin=200)
x$classifier$`beta-binomial`$data$uncertainty %>% hist(breaks=200)
x$classifier$`beta-binomial`$data$uncertainty %>% hist(breaks=10)
x$classifier$`beta-binomial`$data$uncertainty %>% hist(breaks=15)
x$classifier$`beta-binomial`$data$uncertainty %>% hist(breaks=10)
x$classifier$`beta-binomial`$data$uncertainty %>% hist(breaks=12)
x$classifier$`beta-binomial`$data$uncertainty %>% hist(breaks=11)
x$classifier$`beta-binomial`$data$uncertainty %>% hist(breaks=10)
x$classifier$`beta-binomial`$data$uncertainty %>% hist(breaks=6)
x$classifier$`beta-binomial`$data$uncertainty %>% hist(breaks=16)
x$classifier$`beta-binomial`$data$uncertainty %>% hist(breaks=14)
x$classifier$`beta-binomial`$data$uncertainty %>% hist(breaks=13)
dataset
normll
devtools::load_all()
devtools::document()
devtools::check()
